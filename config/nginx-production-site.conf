upstream product {
  server unix:/srv/sockets/self_service_kiosk.socket fail_timeout=0;
}

server {
  listen        80;
  server_name   www.self_service_kiosk.com;
  rewrite       ^ http://self_service_kiosk.com$request_uri? permanent;
}

server {
  listen                   80;
  server_name              self_service_kiosk.com;
  
  rewrite ^(/store.*) https://self_service_kiosk.com$1 redirect;
  rewrite ^(/api.*) https://self_service_kiosk.com$1 redirect;
  
  keepalive_timeout        70;
  client_max_body_size     1M;
  client_body_buffer_size  1M;

  limit_rate_after         1m;       # one megs
  limit_rate               250k;     # bytes per second

  root        /srv/www/self_service_kiosk.com/current/public;
  access_log  /srv/www-log/self_service_kiosk.com/access.log;
  error_log   /srv/www-log/self_service_kiosk.com/error.log;

  location / {
    proxy_redirect off;
    proxy_set_header   Host             $host;
    proxy_set_header   X-Real-IP        $remote_addr;
    proxy_set_header   X-Forwarded-For  $proxy_add_x_forwarded_for;
    proxy_pass http://product;
  }
  
}



server {
  listen                    443;
  server_name               self_service_kiosk.com;
  ssl                       on;
  ssl_certificate           /srv/certs/self_service_kiosk.crt;
  ssl_certificate_key       /srv/certs/self_service_kiosk.key;
  ssl_ciphers               RC4:HIGH:!aNULL:!MD5;
  ssl_prefer_server_ciphers on;
  ssl_session_cache         shared:SSL:10m;
  ssl_session_timeout       10m;
  keepalive_timeout         70;
  client_max_body_size      100M;
  client_body_buffer_size   10M;
  limit_rate_after          10M;       # ten megs
  limit_rate                250k;      # bytes per second
 
  root        /srv/www/self_service_kiosk.com/current/public;
  access_log  /srv/www-log/self_service_kiosk.com/access.log;
  error_log   /srv/www-log/self_service_kiosk.com/error.log;

  location / {
    proxy_redirect off;
    proxy_set_header   Host              $host;
    proxy_set_header   X-Real-IP         $remote_addr;
    proxy_set_header   X-Forwarded-For   $proxy_add_x_forwarded_for;
    proxy_set_header   X-Forwarded-Proto $scheme;
    
    if (!-f $request_filename) {
      proxy_pass http://product;
      
      break;
    }
  }
}

